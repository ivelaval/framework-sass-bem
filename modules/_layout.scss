//module/layout ==========================================================================

//-------------------------------------------
//  Layout Mixins
//-------------------------------------------

@mixin layout__mixin--grid-render($key, $settings) {
  $i: 1;
  @while $i <= __mapping($settings, "columns") {
    .layout__col-#{$key}-#{$i} {
      float: left;
      width: 100% * $i / __mapping($settings,"columns");
      @include __clearfix();
    }
    $i: $i+1;
  }
}

@mixin layout__mixin--grid-media($queryString) {
  @media #{$queryString} {
    @content;
  }
}

@mixin layout__mixin--grid-render-styles($settings) {

  .layout__container {
    position: relative;
    margin-right: auto;
    margin-left: auto;
    @include __clearfix();
  }

  .layout__row {
    position: relative;
    @include __clearfix();
  }

  .layout__row--clear {
    margin-right: __mapping($settings, "margin") * -1;
    margin-left: __mapping($settings, "margin") * -1;
    @extend .layout__row;
  }

  $breakpoints: $__map--base-breakpoints;

  @each $key, $breakpoint in $breakpoints {
    @include layout__mixin--grid-media($breakpoint) {
      @include layout__mixin--grid-render($key, $settings);
    }
  }

}

@mixin layout__mixin--grid-render-universal($index) {
  $breakpoint: __mapping($__map--base-breakpoints, $index);
  @include layout__mixin--grid-media($breakpoint) {
    @content;
  }
}

@mixin layout__mixin--create-blocks() {
  $class-block: layout__block !default;
  @for $i from 1 through 6 {
    $aux: $i * 5;
    .#{$class-block}--p#{$aux} {
      padding: __em($aux);
    }

    .#{$class-block}--pl#{$aux} {
      padding-left: __em($aux);
    }

    .#{$class-block}--pr#{$aux} {
      padding-right: __em($aux);
    }

    .#{$class-block}--plr#{$aux} {
      padding-left: __em($aux);
      padding-right: __em($aux);
    }

    .#{$class-block}--pt#{$aux} {
      padding-top: __em($aux);
    }

    .#{$class-block}--pb#{$aux} {
      padding-bottom: __em($aux);
    }

    .#{$class-block}--ptb#{$aux} {
      padding-top: __em($aux);
      padding-bottom: __em($aux);
    }

    .#{$class-block}--m#{$aux} {
      margin: __em($aux);
    }

    .#{$class-block}--ml#{$aux} {
      margin-left: __em($aux);
    }

    .#{$class-block}--mr#{$aux} {
      margin-right: __em($aux);
    }

    .#{$class-block}--mlr#{$aux} {
      margin-left: __em($aux);
      margin-right: __em($aux);
    }

    .#{$class-block}--mt#{$aux} {
      margin-top: __em($aux);
    }

    .#{$class-block}--mb#{$aux} {
      margin-bottom: __em($aux);
    }

    .#{$class-block}--mtb#{$aux} {
      margin-top: __em($aux);
      margin-bottom: __em($aux);
    }

  }
}

@if __use-module(layout) {

  *,
  *:after,
  *:before {
    @include __base-mpb();
    @include __base-bs();
  }

  .layout__block {
    display: block;
    position: relative;
  }

  //Margin block to all sides
  .layout__block--m {
    margin: #{__em(__mapping($__map--base, margin-top))} #{__em(__mapping($__map--base, margin-left))} #{__em(__mapping($__map--base, margin-bottom))} #{__em(__mapping($__map--base, margin-right))};
  }

  //Margin block to bottom
  .layout__block--mb {
    margin-bottom: __em(__mapping($__map--base, margin-bottom));
  }

  //Margin block to top
  .layout__block--mt {
    margin-top: __em(__mapping($__map--base, margin-top));
  }

  //Margin block to top and bottom
  .layout__block--mtb {
    margin-top: __em(__mapping($__map--base, margin-top));
    margin-bottom: __em(__mapping($__map--base, margin-bottom));
  }

  //Margin block to left
  .layout__block--ml {
    margin-left: __em(__mapping($__map--base, margin-left));
  }

  //Margin block to right
  .layout__block--mr {
    margin-right: __em(__mapping($__map--base, margin-right));
  }

  //Margin block to left and right
  .layout__block--mlr {
    margin-left: __em(__mapping($__map--base, margin-left));
    margin-right: __em(__mapping($__map--base, margin-right));
  }

  @include layout__mixin--create-blocks();

  .layout__sidebar {
    bottom: 0;
    z-index: 1000;
    padding: 10px;
    overflow-x: hidden;
    overflow-y: auto;
    @include __clearfix();
  }

  .layout__sidebar--left {
    float: left;
  }

  .layout__sidebar--right {
    float: right;
  }

  .layout__sidebar--fixed {
    position: fixed;
    left: 0;
    top: 0;
    @include layout__mixin--grid-render-universal("md") {
      position: relative;
      height: 36px;
      @include __base-mpb();
    }

    @include layout__mixin--grid-render-universal("sm") {
      position: relative;
      height: 36px;
      @include __base-mpb();
    }

    @include layout__mixin--grid-render-universal("xs") {
      position: relative;
      height: 36px;
      @include __base-mpb();
    }

  }

  // ----------------------------------------------------
  // Render Grid systems
  // ----------------------------------------------------
  @include layout__mixin--grid-render-styles($__map--base-layout);

}

//endif