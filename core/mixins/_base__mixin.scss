//Core/Mixins ==========================================================================

//------------------------------------------------
//  Utilities for properties base
//------------------------------------------------

//Debug active
@mixin __debug() {
  @if __mapping($__map--zerw, debug) {
    @content;
  }
}

//Margin padding border mixin
@mixin __base-mpb($margin: 0, $padding: 0, $border: -1) {
  @if ($margin != -1) {
    margin: #{$margin};
  }
  @if ($padding != -1) {
    padding: #{$padding};
  }
  @if ($border == -1) {
    border: #{$border};
  }
}

//Border sizing mixin
@mixin __base-bs($type: border-box) {
  -webkit-box-sizing: #{$type}; // Android ≤ 2.3, iOS ≤ 4
  -moz-box-sizing: #{$type}; // Firefox ≤ 28
  box-sizing: #{$type}; // Chrome, Firefox 29+, IE 8+, Opera, Safari 5.1
}

@mixin __base-status($prefix, $extra: false, $underline: false) {
  $colorstatus: $__map--ui-color-status;
  @each $key, $color in $colorstatus {
    .#{$prefix}--#{$key} {
      @include __base-skin($color, $extra: $extra, $underline: $underline);
    }
  }
}

@mixin __base-size($prefix) {
  $psize: $__map--base-padding-size;
  @each $key, $size in $psize {
    .#{$prefix}--#{$key} {
      padding: #{$size} #{__mapping($__map--base-padding-size, lg)};
    }
  }
}

@mixin __base-skin($color: -1, $color-text: -1, $extra: false, $underline: false) {
  @if $color-text == -1 {
    $color-text: __dynamic-text-color($color);
  }

  @if $color != -1 {
    $color-dark: __transform-color-dd($color, $darken: __mapping($__map--ui, percent-color-dark));
    $color-light: __transform-color-sl($color, 0, 2, 0);
    background-color: #{$color};
    border-color: #{$color-dark};
    @include __ui-transition-o(background-color .3s ease);

    //An event is generated for object anchors
    &:hover {
      color: $color-text;
      background-color: #{$color-light};
    }

    @if $extra == true {
      & li,
      & a {
        color: $color-text;
        @if $underline == true {
          text-decoration: underline;
        }
      }
      & li.active {
        color: darken($color-text, 20);
      }
    }
  }
  color: $color-text;
}

@mixin __clearfix() {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

//------------------------------------------------
//  Utilities for breakpoints in media query
//------------------------------------------------

@mixin __bp-large {
  @media only screen and (max-width: 60em) {
    @content;
  }
}

@mixin __bp-medium {
  @media only screen and (max-width: 40em) {
    @content;
  }
}

@mixin __bp-small {
  @media only screen and (max-width: 30em) {
    @content;
  }
}

//------------------------------------------------
//  Utilities for css3 properties
//  Used in all Modules
//  CSS3 please! - css3 modificators
//------------------------------------------------

@mixin __ui-round($radius: __mapping($__map--ui, border-radius)) {
  -webkit-border-radius: #{$radius};
  -moz-border-radius: #{$radius};
  -ms-border-radius: #{$radius};
  border-radius: #{$radius}; // Android 2.1+, Chrome, Firefox 4+, IE 9+, iOS 4+, Opera 10.50+, Safari 5+
  // useful if you don't want a bg color from leaking outside the border:
  background-clip: padding-box; // Android 2.2+, Chrome, Firefox 4+, IE# 9+, iOS 4+, Opera 10.50+, Safari 4+
}

@mixin __ui-round--top($radius) {
  border-top-right-radius: $radius;
  border-top-left-radius: $radius;
}

@mixin __ui-round--right($radius) {
  border-bottom-right-radius: $radius;
  border-top-right-radius: $radius;
}

@mixin __ui-round--bottom($radius) {
  border-bottom-right-radius: $radius;
  border-bottom-left-radius: $radius;
}

@mixin __ui-round--left($radius) {
  border-bottom-left-radius: $radius;
  border-top-left-radius: $radius;
}

@mixin __ui-border($b: 1px solid transparent, $bw: 0 1px 4px 1px) {
  @if ($b != -1) {
    border: #{$b};
  }
  @if($bw != -1){
    border-width: #{$bw};
  }
}

@mixin __ui-user-select($arg: none) {
  -webkit-user-select: #{$arg};
  -moz-user-select: #{$arg};
  -ms-user-select: #{$arg};
  user-select: #{$arg};
}

@mixin __ui-shadow($h-shadow: __mapping($__map--ui-shadow, hshadow), $v-shadow: __mapping($__map--ui-shadow, vshadow), $blur: __mapping($__map--ui-shadow, blur), $spread: __mapping($__map--ui-shadow, spread), $color: __mapping($__map--ui-shadow, color), $opacity: __mapping($__map--ui-shadow, opacity)) {
  -webkit-box-shadow: $h-shadow $v-shadow $blur $spread rgba($color, $opacity); // Android 2.3+, iOS 4.0.2-4.2, Safari 3-4
  -moz-box-shadow: $h-shadow $v-shadow $blur $spread rgba($color, $opacity);
  box-shadow: $h-shadow $v-shadow $blur $spread rgba($color, $opacity); // Chrome 6+, Firefox 4+, IE 9+, iOS 5+, Opera 10.50+
}

@mixin __ui-shadow-o($arg...) {
  -webkit-box-shadow: $arg; // Android 2.3+, iOS 4.0.2-4.2, Safari 3-4
  -moz-box-shadow: $arg;
  box-shadow: $arg; // Chrome 6+, Firefox 4+, IE 9+, iOS 5+, Opera 10.50+
}

@mixin __ui-text-shadow($arg: 0 1px 2px rgba(0, 0, 0, 0.25)) {
  text-shadow: #{$arg};
}

@mixin __ui-gradient($fcolor: __mapping($__map--ui-gradient, fcolor), $scolor: __mapping($__map--ui-gradient, scolor)) {
  background-color: $fcolor;
  background-image: -webkit-linear-gradient(top, $fcolor, $scolor); // Chrome 10-25, iOS 5+, Safari 5.1+
  background-image: linear-gradient(to bottom, $fcolor, $scolor); // Chrome 26, Firefox 16+, IE 10+, Opera
}

@mixin __ui-rgba($r, $g, $b, $opacity: __mapping($__map--ui, opacity)) {
  background-color: transparent;
  background-color: rgba($r, $g, $b, $opacity); // Chrome, Firefox 3+, IE 9+, Opera 10.10+, Safari 3+
}

@mixin __ui-rotate($r: __mapping($__map--ui, rotate)) {
  -webkit-transform: rotate($r); // Chrome, Opera 15+, Safari 3.1+
  -ms-transform: rotate($r); // IE 9
  transform: rotate($r); // Firefox 16+, IE 10+, Opera
}

@mixin __ui-scale($scale: __mapping($__map--ui, scale)) {
  -webkit-transform: scale($scale); // Chrome, Opera 15+, Safari 3.1+
  -ms-transform: scale($scale); // IE 9
  transform: scale($scale); // Firefox 16+, IE 10+, Opera
}

@mixin __ui-3dtransforms($perspective: 300px, $type: "Y", $rotate: 180deg) {

  -webkit-perspective: $perspective; // Chrome 12+, Safari 4+
  -ms-perspective: $perspective; // IE 10
  perspective: $perspective;

  -webkit-transform: rotate#{$type}($rotate);
  -webkit-transform-style: preserve-3d;
  -ms-transform: rotate#{$type}($rotate);
  -ms-transform-style: preserve-3d;
  transform: rotate#{$type}($rotate);
  transform-style: preserve-3d;

}

@mixin __ui-transition-s($time: 0.3s, $ease: __mapping($__map--ui, ease)) {
  -webkit-transition: all $time $ease; // Android 2.1+, Chrome 1-25, iOS 3.2-6.1, Safari 3.2-6
  -moz-transition: all $time $ease;
  -ms-transition: all $time $ease;
  -o-transition: all $time $ease;
  transition: all $time $ease; // Chrome 26, Firefox 16+, iOS 7+, IE 10+, Opera, Safari 6.1+
}

@mixin __ui-transition-o($args...) {
  -webkit-transition: #{$args};
  -moz-transition: #{$args};
  -ms-transition: #{$args};
  -o-transition: #{$args};
  transition: #{$args};
}

@mixin __ui-textshadow($h-shadow: __mapping($__map--ui-text-shadow, hshadow), $v-shadow: __mapping($__map--ui-text-shadow, vshadow), $blur: __mapping($__map--ui-text-shadow, blur), $color: __mapping($__map--ui-text-shadow, color)) {
  text-shadow: $h-shadow $v-shadow $blur $color; // Chrome, Firefox 3.5+, IE 10+, Opera 9+, Safari 1+
}

@mixin __ui-opacity($opacity: __mapping($__map--ui, opacity)) {
  zoom: 1;
  filter: alpha(opacity=__calculate-opacity($opacity)); //IE8
  opacity: $opacity; // Android 2.1+, Chrome 4+, Firefox 2+, IE 9+, iOS 3.2+, Opera 9+, Safari 3.1+
}

@mixin __ui-bgsize($size: __mapping($__map--ui, background-size)) {
  -webkit-background-size: $size;
  -moz-background-size: $size;
  -o-background-size: $size;
  background-size: $size;
}

@mixin __ui-keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name}
  {
    @content;
  }
  @-moz-keyframes #{$animation-name}
  {
    @content;
  }
  @-ms-keyframes #{$animation-name}
  {
    @content;
  }
  @-o-keyframes #{$animation-name}
  {
    @content;
  }
  @keyframes #{$animation-name}
  {
    @content;
  }
}

@mixin __ui-animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}

//------------------------------------------------
//  Utilities for texts
//  Used in Module _text.scss
//------------------------------------------------

@mixin __font-s($fs: 1em, $lh: 1.4) {
  font-size: $fs;
  line-height: $lh;
}

@mixin __font($size, $line, $margin-bottom: 0, $family: __mapping($__map--base-font, family), $color: __mapping($__map--base-font, color), $weight: __mapping($__map--base-font, weight)) {
  font-size: __em($size);
  line-height: ($line/$size);
  font-family: $family;
  margin-bottom: __em($margin-bottom, $size);
  color: $color;
}

@mixin __font-size($size) {
  font-size: $size;
  font-size: __rem($size);
}

@mixin __font-auto-size($size, $line: __mapping($__map--base-font, line-height)) {
  font-size: __em($size);
  line-height: ($line/$size);
}

